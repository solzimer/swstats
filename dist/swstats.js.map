{"version":3,"sources":["swstats.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","$","SWindow","window","Operation","TimeStats","SizeStats","register","sum","currval","newitems","olditems","allitems","newstats","oldstats","undefined","ln","lo","j","v","freq","sums","total","res","mode","map","push","k","sort","b","pop","NOps","COps","DEF_OPS","numeric","category","TYPES","OPS","fn","count","deps","max","min","avg","stdev","type","name","def","RXOps","DEFOps","Types","len","Infinity","Math","nvl","ovl","isNaN","sqsum","oavg","oldavg","oldsqsum","oldsum","newavg","newsqsum","newsum","it","sqrt","Util","DEF_OPTIONS","ops","step","size","options","_options","_arr","_size","_type","_ops","stats","clone","sortOps","_oldstats","vals","Array","_pushNum","_pushCat","arr","old","forEach","shift","op","win","slot","IVAL","LIST","setInterval","now","Date","filter","sws","_pause","time","_time","ABSOLUTE","RELATIVE","_tst","timestamp","TS","_step","_active","_mints","_maxts","_pushNumRel","_pushCatRel","last","diff","idx","indexOf","splice","oa","na","tsdist","tss","dt","abs","cloned","item","newslot","obj","depends","reduce","curr","val","dep","tmp"],"mappings":"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","file":"swstats.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n(function($) {\n\tvar SWindow = require(\"./index\");\n\t$.SWindow = SWindow;\n})(window);\n\n},{\"./index\":2}],2:[function(require,module,exports){\nconst\n\tOperation = require(\"./lib/ops\"),\n\tTimeStats = require(\"./lib/timestats\"),\n\tSizeStats = require(\"./lib/sizestats\");\n\nmodule.exports = {\n\tTimeStats : TimeStats,\n\tSizeStats : SizeStats,\n\tOperation : Operation,\n\tregister : Operation.register\n};\n\n},{\"./lib/ops\":4,\"./lib/sizestats\":6,\"./lib/timestats\":7}],3:[function(require,module,exports){\nmodule.exports = {\n\tsum(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tcurrval = currval===undefined? {} : currval;\n\t\tvar ln = newitems.length, lo = olditems.length;\n\t\tfor(let i=0;i<ln;i++) {\n\t\t\tfor(let j in newitems[i].v) {\n\t\t\t\tcurrval[j] = currval[j] || 0;\n\t\t\t\tcurrval[j] += newitems[i].v[j];\n\t\t\t}\n\t\t}\n\t\tfor(let i=0;i<lo;i++) {\n\t\t\tfor(let j in olditems[i].v) {\n\t\t\t\tcurrval[j] = currval[j] || 0;\n\t\t\t\tcurrval[j] -= olditems[i].v[j];\n\t\t\t}\n\t\t}\n\t\treturn currval;\n\t},\n\tfreq(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar sums = newstats.sum;\n\t\tvar total = 0, res = {};\n\t\tfor(let i in sums) total += sums[i];\n\t\tfor(let i in sums) res[i] = sums[i] / total;\n\t\treturn res;\n\t},\n\tmode(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar sums = newstats.sum;\n\t\tvar map = [];\n\t\tfor(let i in sums) map.push({k:i,t:sums[i]});\n\t\tmap.sort((a,b)=>a.t-b.t);\n\t\treturn (map.pop()||{}).k;\n\t}\n}\n\n},{}],4:[function(require,module,exports){\nconst\n\tNOps = require(\"./nops\"),\n\tCOps = require(\"./cops\");\n\n// Default operations\nconst DEF_OPS = {\n\tnumeric : [\"count\",\"sum\",\"max\",\"min\",\"avg\",\"stdev\"],\n\tcategory : [\"sum\",\"freq\",\"mode\"]\n};\n\n// Stats function type constants\nconst TYPES = {\n\tnumeric : \"numeric\",\n\tcategory : \"category\"\n};\n\n// Registered operations\nconst OPS = {\n\tnumeric : {\n\t\t\"count\" : {fn:NOps.count,deps:[]},\n\t\t\"sum\" : {fn:NOps.sum,deps:[]},\n\t\t\"max\" : {fn:NOps.max,deps:[]},\n\t\t\"min\" : {fn:NOps.min,deps:[]},\n\t\t\"avg\" : {fn:NOps.avg,deps:[]},\n\t\t\"stdev\" : {fn:NOps.stdev,deps:[\"avg\"]},\n\t},\n\tcategory : {\n\t\t\"sum\" : {fn:COps.sum,deps:[]},\n\t\t\"freq\" : {fn:COps.freq,deps:[\"sum\"]},\n\t\t\"mode\" : {fn:COps.mode,deps:[\"sum\"]}\n\t}\n};\n\n/**\n * Registers a new operation\n * @param type [TYPES.numeric / TYPES.category]\n * @param name The name of the stat function\n * @param deps Array of dependency names\n * @param fn Stats function to be called, in the form of\n * fn(currval,newitems,olditems,allitems,newstats,oldstats)\n * @param def Use by default.\n */\nfunction register(type,name,deps,fn,def) {\n\tOPS[type][name] = {fn:fn,deps:deps};\n\tif(def) DEF_OPS[type].push(name);\n}\n\nmodule.exports = {\n\tNOps,\n\tCOps,\n\tRXOps:OPS,\n\tDEFOps:DEF_OPS,\n\tTypes:TYPES,\n\tregister\n}\n\n},{\"./cops\":3,\"./nops\":5}],5:[function(require,module,exports){\nconst OPS = {\n\tcount(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar t = 0, len = allitems.length;\n\t\tfor(var i=0;i<len;i++) t += (allitems[i].l||1);\n\t\treturn t;\n\t},\n\tsum(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tcurrval = currval===undefined? 0 : currval;\n\t\tvar ln = newitems.length, lo = olditems.length;\n\t\tfor(let i=0;i<ln;i++) currval += newitems[i].v;\n\t\tfor(let i=0;i<lo;i++) currval -= olditems[i].v;\n\n\t\treturn currval;\n\t},\n\tmax(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar max = -Infinity, len = allitems.length;\n\t\tfor(let i=0;i<len;i++)\n\t\t\tmax = Math.max(max,allitems[i].max);\n\t\treturn max;\n\t},\n\tmin(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar min = Infinity, len = allitems.length;\n\t\tfor(let i=0;i<len;i++)\n\t\t\tmin = Math.min(min,allitems[i].min);\n\t\treturn min;\n\t},\n\tavg(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar\n\t\t\tln = OPS.count(0,0,0,newitems), lo = OPS.count(0,0,0,olditems),\n\t\t\tnvl = OPS.count(0,0,0,allitems), ovl = nvl-ln+lo;\n\n\t\tcurrval = currval===undefined? 0 : currval;\n\t\tcurrval = currval * ovl;\n\n\t\tfor(let i=0;i<newitems.length;i++) currval += newitems[i].v;\n\t\tfor(let i=0;i<olditems.length;i++) currval -= olditems[i].v;\n\t\tcurrval = currval / nvl;\n\t\treturn isNaN(currval)? 0 : currval;\n\t},\n\tstdev(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\toldstats.stdev = oldstats.stdev || {avg:1,sqsum:0,sum:0,stdev:0};\n\n\t\tvar\n\t\t\tln = OPS.count(0,0,0,newitems), lo = OPS.count(0,0,0,olditems),\n\t\t\tnvl = OPS.count(0,0,0,allitems), ovl = nvl-ln+lo,\n\t\t\tlen = allitems.length,\n\t\t\toavg = oldstats.avg || 0;\n\n\t\tvar oldavg = oldstats.stdev.avg;\n\t\tvar oldsqsum = oldstats.stdev.sqsum;\n\t\tvar oldsum = oldstats.stdev.sum;\n\t\tvar newavg = newstats.avg || 0;\n\t\tvar newsqsum = oldsqsum;\n\t\tvar newsum = oldsum;\n\n\t\tfor(let i=0;i<olditems.length;i++) {\n\t\t\tlet it = olditems[i].v / (olditems[i].l||1);\n\t\t\tnewsqsum -= it*it;\n\t\t\tnewsum -= it;\n\t\t}\n\n\t\tfor(let i=0;i<newitems.length;i++) {\n\t\t\tlet it = newitems[i].v / (newitems[i].l||1);\n\t\t\tnewsqsum += it*it;\n\t\t\tnewsum += it;\n\t\t}\n\n\t\tvar stdev = Math.sqrt((newsqsum - 2*newavg*newsum + len*newavg*newavg) / len);\n\t\treturn {\n\t\t\tavg : newavg,\n\t\t\tsqsum : newsqsum,\n\t\t\tsum : newsum,\n\t\t\tstdev : stdev\n\t\t}\n\t}\n}\n\nmodule.exports = OPS;\n\n},{}],6:[function(require,module,exports){\nconst\n\tOperation = require(\"./ops\"),\n\tUtil = require(\"./util\"),\n\tTypes = Operation.Types,\n\tRXOps = Operation.RXOps,\n\tDEFOps = Operation.DEFOps;\n\n// Default options\nconst DEF_OPTIONS = {\n\ttype : Types.numeric,\n\tops : DEFOps.numeric,\n\tstep : 1000\n};\n\n/**\n * SizeStats Slide Window\n * @class\n */\nclass SizeStats {\n\t/**\n\t * @param {numeric} size Number of maximum slots before slide\n\t * @param {[type]} options Options\n\t */\n\tconstructor(size,options) {\n\t\toptions = options || DEF_OPTIONS;\n\n\t\tthis._options = options;\n\t\tthis._arr = [];\n\t\tthis._size = size || 1000;\n\t\tthis._type = options.type || DEF_OPTIONS.type;\n\t\tthis._ops = options.ops || DEFOps[this._type];\n\t\tthis.stats = Util.clone(options.stats||{});\n\n\t\tUtil.sortOps(this._ops,this._type);\n\t}\n\n\tclean() {\n\t\tthis._arr = [];\n\t\tthis._oldstats = {};\n\t\tthis.stats = Util.clone(this._options.stats||{});\n\t}\n\n\tget length() {\n\t\treturn this._arr.length;\n\t}\n\n\tpush(vals) {\n\t\tvals = vals instanceof Array? vals : [vals];\n\n\t\treturn this._type==Types.numeric?\n\t\t\tthis._pushNum(vals) :\n\t\t\tthis._pushCat(vals);\n\t}\n\n\t_pushNum(vals) {\n\t\tvar arr = this._arr, old = [];\n\t\tvar type = this._type;\n\t\tvar oldstats = Util.clone(this.stats);\n\n\t\tvals = vals.map(v=>{return {v:v,l:1,max:v,min:v};});\n\t\tvals.forEach(v=>this._arr.push(v));\n\n\t\twhile(this._arr.length>this._size) {\n\t\t\told.push(this._arr.shift());\n\t\t}\n\n\t\tthis._ops.forEach(op=>{\n\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],vals,old,arr,this.stats,oldstats);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\t_pushCat(vals) {\n\t\tvar arr = this._arr, old = [];\n\t\tvar type = this._type;\n\t\tvar oldstats = Util.clone(this.stats);\n\t\tvar map = {v:{}};\n\n\t\tvals.forEach(v=>{\n\t\t\tmap.v[v] = map.v[v] || 0;\n\t\t\tmap.v[v]++;\n\t\t});\n\t\tthis._arr.push(map);\n\n\t\twhile(this._arr.length>this._size) {\n\t\t\told.push(this._arr.shift());\n\t\t}\n\n\t\tthis._ops.forEach(op=>{\n\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],[map],old,arr,this.stats,oldstats);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tget window() {\n\t\tlet type = this._type;\n\t\tlet win = this._arr.map(slot=>{\n\t\t\tlet ops = {};\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tops[op] = RXOps[type][op].fn(undefined,[slot],[],[slot],ops,{});\n\t\t\t});\n\t\t\treturn ops;\n\t\t});\n\t\treturn win;\n\t}\t\n}\n\nmodule.exports = SizeStats;\n\n},{\"./ops\":4,\"./util\":8}],7:[function(require,module,exports){\nconst\n\tOperation = require(\"./ops\"),\n\tUtil = require(\"./util\"),\n\tTypes = Operation.Types,\n\tRXOps = Operation.RXOps,\n\tDEFOps = Operation.DEFOps;\n\n// Default options\nconst DEF_OPTIONS = {\n\ttype : Types.numeric,\n\tops : DEFOps.numeric,\n\tstep : 1000\n};\n\nconst IVAL = 1000;\t// Slide window interval\nconst LIST = [];\t\t// Active window instances\n\n/**\n * Slide time window interval\n */\nsetInterval(()=>{\n\tvar now = Date.now();\n\n\t// For each stat created object\n\tLIST.filter(sws=>!sws._pause).forEach(sws=>{\n\t\tvar arr = sws._arr, time = sws._time;\n\t\tvar type = sws._type;\n\t\tvar old = [];\n\t\tvar oldstats = Util.clone(sws.stats);\n\n\t\t// Remove slots whose date has expired\n\t\twhile(arr.length && now-arr[0].t>time)\n\t\t\told.push(arr.shift());\n\n\t\t// Execute each stat operation over the remaining slots\n\t\tsws._ops.forEach(op=>{\n\t\t\tsws.stats[op] = RXOps[type][op].fn(sws.stats[op],[],old,sws._arr,sws.stats,oldstats);\n\t\t});\n\t});\n},IVAL);\n\n\n/**\n * TimeStats Slide Window\n * @class\n */\nclass TimeStats {\n\tstatic get TS()  {\n\t\treturn {\n\t\t\tABSOLUTE : \"absolute\",\n\t\t\tRELATIVE : \"relative\"\n\t\t}\n\t}\n\n\t/**\n\t * @param {numeric} time\tTime (ms) of the duration of the window, before slide\n\t * @param {object} options\toptions\n\t */\n\tconstructor(time,options) {\n\t\toptions = options || DEF_OPTIONS;\n\t\tthis._options = options;\n\t\tthis._arr = [];\n\t\tthis._time = time || 10000;\n\t\tthis._tst = options.timestamp || TimeStats.TS.ABSOLUTE;\n\t\tthis._type = options.type || DEF_OPTIONS.type;\n\t\tthis._ops = options.ops || DEFOps[this._type];\n\t\tthis._step = options.step || DEF_OPTIONS.step;\n\t\tthis._pause = false;\n\t\tthis._active = true;\n\t\tthis._oldstats = {};\n\t\tthis._mints = Infinity;\n\t\tthis._maxts = -Infinity;\n\t\tthis.stats = Util.clone(options.stats||{});\n\n\t\tUtil.sortOps(this._ops,this._type);\n\t\tif(this._tst==TimeStats.TS.ABSOLUTE)\n\t\t\tLIST.push(this);\n\t}\n\n\tget length() {\n\t\treturn this._arr.length;\n\t}\n\n\tclean() {\n\t\tthis._arr = [];\n\t\tthis._oldstats = {};\n\t\tthis.stats = Util.clone(this._options.stats||{});\n\t}\n\n\tpush(vals) {\n\t\tif(!this._active || this._pause) return;\n\n\t\tvals = vals instanceof Array? vals : [vals];\n\n\t\tif(this._tst==TimeStats.TS.ABSOLUTE) {\n\t\t\treturn this._type==Types.numeric?\n\t\t\t\tthis._pushNum(vals) :\tthis._pushCat(vals);\n\t\t}\n\t\telse {\n\t\t\treturn this._type==Types.numeric?\n\t\t\t\tthis._pushNumRel(vals) :\tthis._pushCatRel(vals);\n\t\t}\n\t}\n\n\tpause() {\n\t\tthis._pause = true;\n\t}\n\n\tresume(shift) {\n\t\tvar arr = this._arr;\n\t\tif(shift && arr.length) {\n\t\t\tvar now = Date.now();\n\t\t\tvar last = arr[arr.length].t;\n\t\t\tvar diff = now - last;\n\t\t\tarr.length.forEach(v=>v.t+=diff);\n\t\t}\n\t\tthis._pause = false;\n\t}\n\n\tdestroy() {\n\t\tvar idx = LIST.indexOf(this);\n\t\tif(idx>=0) LIST.splice(idx,1);\n\t\tthis._active = false;\n\t}\n\n\t_pushNum(vals) {\n\t\tlet\n\t\t\tnow = Date.now(),\n\t\t\tarr = this._arr,\n\t\t\ttype = this._type,\n\t\t\toldstats = Util.clone(this.stats);\n\n\t\t// Map values to stat object\n\t\tvals = vals.map(v=>{return {t:now,v:v,l:1,max:v,min:v};});\n\n\t\t// First slot in array\n\t\tif(!arr.length) arr.push({t:now,v:0,l:0,max:-Infinity,min:Infinity});\n\n\t\t// Get last slot\n\t\tlet last = arr[arr.length-1];\n\n\t\t// Value fits in current slot\n\t\tif(now-last.t < this._step) {\n\t\t\t// Clone the current slot to make the diff\n\t\t\tlast = Util.clone(last);\n\n\t\t\t// Acumulate on the slot copy\n\t\t\tvals.forEach(v=>{\n\t\t\t\tlast.v+=v.v; last.l+=1;\n\t\t\t\tlast.max = Math.max(last.max,v.v),\n\t\t\t\tlast.min = Math.min(last.min,v.v)\n\t\t\t});\n\n\t\t\t// Remove the original slot and push the copy\n\t\t\tvar oa = [arr.pop()], na = [last];\n\t\t\tarr.push(last);\n\n\t\t\t// Apply operations\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvals.forEach(v=>{arr.push(v)});\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],vals,[],arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t_pushNumRel(vals) {\n\t\tlet\n\t\t\tnow = Date.now(),\n\t\t\tarr = this._arr,\n\t\t\ttype = this._type,\n\t\t\toldstats = Util.clone(this.stats);\n\n\t\tvals = vals.map(v=>{return {t:v.t||now,v:v.v,l:1,max:v.v,min:v.v};});\n\n\t\tvals.forEach(v=>{\n\t\t\t// First element\n\t\t\tif(!arr.length) {\n\t\t\t\tarr.push(v);\n\t\t\t\tthis._mints = v.t;\n\t\t\t\tthis._maxts = v.t;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore values older than current time window\n\t\t\tlet tsdist = this._maxts - v.t;\n\t\t\tif(tsdist>this._time) return;\n\n\t\t\t// Find the closest slot by time difference\n\t\t\tlet tss = arr.map((slot,i)=>{\n\t\t\t\treturn {dt:Math.abs(slot.t-v.t),i:i}\n\t\t\t}).sort((a,b)=>{\n\t\t\t\treturn b.dt-a.dt;\n\t\t\t}).pop();\n\t\t\tlet slot = arr[tss.i];\n\n\t\t\t// Value fits in this slot\n\t\t\tif(Math.abs(v.t-slot.t)<this._step) {\n\t\t\t\tlet cloned = Util.clone(slot);\n\n\t\t\t\tcloned.v+=v.v; cloned.l+=1;\n\t\t\t\tcloned.max = Math.max(cloned.max,v.v),\n\t\t\t\tcloned.min = Math.min(cloned.min,v.v)\n\n\t\t\t\t// Remove the original slot and push the copy\n\t\t\t\tvar oa = arr.splice(tss.i,1), na = [cloned];\n\t\t\t\tarr.push(cloned);\n\n\t\t\t\t// Apply operations\n\t\t\t\tthis._ops.forEach(op=>{\n\t\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Create a new slot\n\t\t\telse {\n\t\t\t\tarr.push(v);\n\t\t\t\tthis._ops.forEach(op=>{\n\t\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],[v],[],arr,this.stats,oldstats);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update window time range\n\t\t\tthis._mints = Math.min(v.t,this._mints);\n\t\t\tthis._maxts = Math.max(v.t,this._maxts);\n\t\t\toldstats = Util.clone(this.stats);\n\t\t});\n\n\t\t// Sort window\n\t\tarr.sort((a,b)=>a.t-b.t);\n\n\t\t// Remove old slots\n\t\tlet old = [];\n\t\twhile(Math.abs(this._mints-this._maxts)>this._time) {\n\t\t\told.push(arr.shift());\n\t\t\tthis._mints = arr[0].t;\n\t\t}\n\n\t\t// Refresh operations\n\t\tif(old.length) {\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],[],old,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t_pushCat(vals) {\n\t\tvar now = Date.now();\n\t\tvar arr = this._arr;\n\t\tvar type = this._type;\n\t\tvar oldstats = Util.clone(this.stats);\n\t\tvar map = {}\n\n\t\tvals.forEach(v=>{\n\t\t\tmap[v] = map[v] || 0;\n\t\t\tmap[v]++;\n\t\t});\n\n\t\tif(!arr.length) arr.push({t:now,v:{}});\n\t\tvar last = Util.clone(arr[arr.length-1]);\n\n\t\tif(now-last.t < this._step) {\n\t\t\tfor(let i in map) {\n\t\t\t\tlast.v[i] = last.v[i] || 0;\n\t\t\t\tlast.v[i] += map[i];\n\t\t\t}\n\t\t\tvar oa = [arr.pop()], na = [last];\n\t\t\tarr.push(last);\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvar item = {t:now,v:map};\n\t\t\tarr.push(item);\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],[item],[],arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t_pushCatRel(vals) {\n\t\tlet\n\t\t\tarr = this._arr,\n\t\t\ttype = this._type,\n\t\t\toldstats = Util.clone(this.stats);\n\n\t\tvals.forEach(v=>{\n\t\t\t// First element\n\t\t\tif(!arr.length) {\n\t\t\t\tarr.push({t:v.t,v:{[v.v]:1}});\n\t\t\t\tthis._mints = v.t;\n\t\t\t\tthis._maxts = v.t;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore values older than current time window\n\t\t\tlet tsdist = this._maxts - v.t;\n\t\t\tif(tsdist>this._time) return;\n\n\t\t\t// Find the closest slot by time difference\n\t\t\tlet tss = arr.map((slot,i)=>{\n\t\t\t\treturn {dt:Math.abs(slot.t-v.t),i:i}\n\t\t\t}).sort((a,b)=>{\n\t\t\t\treturn b.dt-a.dt;\n\t\t\t}).pop();\n\t\t\tlet slot = arr[tss.i];\n\n\t\t\t// Value fits in this slot\n\t\t\tif(Math.abs(v.t-slot.t)<this._step) {\n\t\t\t\tlet cloned = Util.clone(slot);\n\n\t\t\t\tcloned.v[v.v] = cloned.v[v.v] || 0;\n\t\t\t\tcloned.v[v.v] += 1;\n\n\t\t\t\t// Remove the original slot and push the copy\n\t\t\t\tvar oa = arr.splice(tss.i,1), na = [cloned];\n\t\t\t\tarr.push(cloned);\n\n\t\t\t\t// Apply operations\n\t\t\t\tthis._ops.forEach(op=>{\n\t\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Create a new slot\n\t\t\telse {\n\t\t\t\tlet newslot = {t:v.t,v:{[v.v]:1}};\n\t\t\t\tarr.push(newslot);\n\t\t\t\tthis._ops.forEach(op=>{\n\t\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],newslot,[],arr,this.stats,oldstats);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update window time range\n\t\t\tthis._mints = Math.min(v.t,this._mints);\n\t\t\tthis._maxts = Math.max(v.t,this._maxts);\n\t\t\toldstats = Util.clone(this.stats);\n\t\t});\n\n\t\t// Sort window\n\t\tarr.sort((a,b)=>a.t-b.t);\n\n\t\t// Remove old slots\n\t\tlet old = [];\n\t\twhile(Math.abs(this._mints-this._maxts)>this._time) {\n\t\t\told.push(arr.shift());\n\t\t\tthis._mints = arr[0].t;\n\t\t}\n\n\t\t// Refresh operations\n\t\tif(old.length) {\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = RXOps[type][op].fn(this.stats[op],[],old,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tget window() {\n\t\tlet type = this._type;\n\t\tlet win = this._arr.map(slot=>{\n\t\t\tlet ops = {t:slot.t};\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tops[op] = RXOps[type][op].fn(undefined,[slot],[],[slot],ops,{});\n\t\t\t});\n\t\t\treturn ops;\n\t\t});\n\t\treturn win;\n\t}\n}\n\nmodule.exports = TimeStats;\n\n},{\"./ops\":4,\"./util\":8}],8:[function(require,module,exports){\nconst RXOps = require(\"./ops\").RXOps;\n\n/**\n * Simple object clone function\n */\nfunction clone(obj) {\n\tif(typeof(obj)!=\"object\") {\n\t\treturn obj;\n\t}\n\telse {\n\t\tvar o = {};\n\t\tfor(var i in obj) o[i] = clone(obj[i]);\n\t\treturn o;\n\t}\n}\n\nfunction depends(a,b,type) {\n\tvar deps = RXOps[type][a].deps;\n\tif(!deps.length) return false;\n\telse if(deps.indexOf(b)>=0) return true;\n\telse {\n\t\treturn deps.reduce((curr,val)=>curr||depends(val,b,type),false);\n\t}\n}\n\n/**\n * Sorts category operations by its dependencies\n */\nfunction sortOps(ops,type) {\n\tvar map = {}, n = false;\n\n\tops.forEach(op=>map[op] = true);\n\tdo {\n\t\tn = false;\n\t\tops.forEach(op=>{\n\t\t\tRXOps[type][op].deps.forEach(dep=>{\n\t\t\t\tif(!map[dep]) {\n\t\t\t\t\tmap[dep] = true;\n\t\t\t\t\tops.push(dep);\n\t\t\t\t\tn = true;\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}while(n);\n\n\t// Stupid sort because Array.sort will not work with dependency sorting\n\tif(ops.length>1) {\n\t\tlet tmp = null, it = false;\n\t\tdo {\n\t\t\tit = false;\n\t\t\tfor(let i=0;i<ops.length;i++) {\n\t\t\t\tfor(let j=i;j<ops.length;j++) {\n\t\t\t\t\tif(depends(ops[i],ops[j],type)) {\n\t\t\t\t\t\ttmp = ops[i];\n\t\t\t\t\t\tops[i] = ops[j];\n\t\t\t\t\t\tops[j] = tmp;\n\t\t\t\t\t\tit = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}while(it);\n\t}\n}\n\nmodule.exports = {clone,depends,sortOps}\n\n},{\"./ops\":4}]},{},[1]);\n"]}